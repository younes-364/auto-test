pipeline {
    agent any
    stages {
        stage('Install Dependencies') {
            steps {
	            sh "go install github.com/gruntwork-io/terratest/modules/terraform@latest"
	            sh "go install github.com/stretchr/testify/assert@latest"
                sh "go install github.com/gruntwork-io/terratest/modules/test-structure"
            }
        }
        stage('Configure Terraform Cloud') {
            steps {
                env.ATLAS_TOKEN = 'eM6P0JyKaZzJaA.atlasv1.U0oMslxMeZtNlTMM5owqnPg0MomT8GIHa2GhyrTNl0zgE7vzksFfzCqHF2Wjzyuaflw'
            }
        }
        stage('Provision infrastructure') {
            steps {
                terraform(
                    installation: 'Terraform Cloud',
                    backendType: 'workspaces',
                    backendConfig: [
                        name: 'my-app-prod'
                    ]
                    vars: [
                        AWS_DEFAULT_REGION: 'eu-central-1',
                        AWS_ACCESS_KEY_ID: 'AKIAVPGBT54OGVNNC3XX',
                        AWS_SECRET_ACCESS_KEY: 'govjglUYUf5qdiOvPvmPueWYCJncDRpEQZnV'
                    ]
                )
            }
        }
        stage('Run Tests') {
            steps {
                sh 'go test -v ./'
            }
        }
        // stage('Upload Results') {
        //     steps {
        //         sh 'curl -X POST -F "file=@test-results.xml" http://reporting-server/upload'
        //     }
        // }
    }
}
